@import './common';

@mixin modifier-condition($name, $value, $key, $attribute) {
    @if str-index($name, $key) {
        .#{$key} {
            &#{str-slice($name, str-index($name, $key) + str-length($key))} {
                #{$attribute}: $value;
            }
        }
    }
}

@mixin gutter-modifiers($gutters) {

    @each $key,
    $value in $gutters {
        .mt-#{$key} {
            margin-top: #{$value};
        }

        .mb-#{$key} {
            margin-bottom: #{$value};
        }

        .my-#{$key} {
            margin-top: #{$value};
            margin-bottom: #{$value};
        }

        .ml-#{$key} {
            margin-left: #{$value};
        }

        .mr-#{$key} {
            margin-right: #{$value};
        }

        .pt-#{$key} {
            padding-top: #{$value};
        }

        .pb-#{$key} {
            padding-bottom: #{$value};
        }

        .py-#{$key} {
            padding-top: #{$value};
            padding-bottom: #{$value};
        }

        .pl-#{$key} {
            padding-left: #{$value};
        }

        .pr-#{$key} {
            padding-right: #{$value};
        }

        .px-#{$key} {
            padding-left: #{$value};
            padding-right: #{$value};
        }
    }
}

@mixin map-variables($map) {

    @each $name,
    $value in $map {
        --#{$name}: #{$value};
    }
}

@mixin theme-generator($name, $variables, $gutters) {

    .theme--#{$name} {
        @include map-variables($variables);
        @include gutter-modifiers($gutters);

        @each $name,
        $value in $variables {
            @include modifier-condition($name, $value, "text", "color");
            @include modifier-condition($name, $value, "bg", "background-color");
            @include modifier-condition($name, $value, "fs", "font-size");
            @include modifier-condition($name, $value, "fw", "font-weight");
            @include modifier-condition($name, $value, "ls", "letter-spacing");
        }

    }

}

@mixin responsive-background($folder, $name, $extension) {
    & {
        background-image: url('#{$folder}/#{$name}-xs.#{$extension}');
        background-position: center center;
        background-size: cover;

        @media (-webkit-min-device-pixel-ratio: 2),
        (min-resolution: $retinaDpi),
        (min-width: $breakpoints-sm) {
            & {
                background-image: url('#{$folder}/#{$name}-sm.#{$extension}');
            }
        }

        @media (min-width: $breakpoints-lg) {
            & {
                background-image: url('#{$folder}/#{$name}-md.#{$extension}');
            }
        }

        @media (-webkit-min-device-pixel-ratio: 2) and (min-width: $breakpoints-lg),
        (min-resolution: $retinaDpi) and (min-width: $breakpoints-lg) {
            & {
                background-image: url('#{$folder}/#{$name}-lg.#{$extension}');
            }
        }

        @media (min-width: $breakpoints-xl) {
            & {
                background-image: url('#{$folder}/#{$name}-lg.#{$extension}');
            }
        }

        @media (-webkit-min-device-pixel-ratio: 2) and (min-width: $breakpoints-xl),
        (min-resolution: $retinaDpi) and (min-width: $breakpoints-xl),
        (min-width: $breakpoints-xxl) {
            & {
                background-image: url('#{$folder}/#{$name}-xl.#{$extension}');
            }
        }

    }
}

@mixin line-clamp($line) {
    & {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        line-clamp: $line;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
    }
}